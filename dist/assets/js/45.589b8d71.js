(window.webpackJsonp=window.webpackJsonp||[]).push([[45],{388:function(t,v,e){"use strict";e.r(v);var s=e(25),a=Object(s.a)({},(function(){var t=this,v=t.$createElement,e=t._self._c||v;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"vue-双向数据绑定原理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vue-双向数据绑定原理"}},[t._v("#")]),t._v(" vue 双向数据绑定原理")]),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),e("p",[t._v("vue.js 是采用数据劫持结合发布者-订阅者模式的方式，通过 Object.defineProperty()来劫持各个属性的 setter，getter，在数据变动时发布消息给订阅者，触发相应的监听回调。")])]),t._v(" "),e("h2",{attrs:{id:"何为双向数据流，单向数据流呢？"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#何为双向数据流，单向数据流呢？"}},[t._v("#")]),t._v(" 何为双向数据流，单向数据流呢？")]),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("单向数据流")]),t._v(" "),e("p",[t._v("顾名思义，数据流是单向的。数据流动方向可以跟踪，流动单一，追查问题的时候可以更快捷。缺点就是写起来不太方便。要使 UI 发生变更就必须创建各种 action 来维护对应的 state")])]),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("双向数据绑定")]),t._v(" "),e("p",[t._v("数据之间是相通的，将数据变更的操作隐藏在框架内部。优点是在表单交互较多的场景下，会简化大量与业务无关的代码。缺点就是无法追踪局部状态的变化，增加了出错时 debug 的难度。")])]),t._v(" "),e("h2",{attrs:{id:"mvc-和-mvvm"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mvc-和-mvvm"}},[t._v("#")]),t._v(" MVC 和 MVVM")]),t._v(" "),e("p",[t._v("说到双向数据绑定就不能不提 "),e("code",[t._v("MVVM")]),t._v("。说 MVVM，又不得不提一下 MVC")]),t._v(" "),e("h3",{attrs:{id:"mvc"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mvc"}},[t._v("#")]),t._v(" MVC")]),t._v(" "),e("p",[t._v("很早之前的框架普遍用的都是 MVC 模式。"),e("code",[t._v("M（模型 model)")]),t._v(" 、"),e("code",[t._v("V（视图Views）")]),t._v("、"),e("code",[t._v("C（控制器Controller）")])]),t._v(" "),e("p",[t._v("特点：")]),t._v(" "),e("ul",[e("li",[t._v("View 传送指令到 Controller；")]),t._v(" "),e("li",[t._v("Controller 完成业务逻辑后，要求 Model 改变状态；")]),t._v(" "),e("li",[t._v("Model 将新的数据发送到 View，用户得到反馈。")])]),t._v(" "),e("p",[e("strong",[t._v("所有通信都是单向的。")])]),t._v(" "),e("p",[e("img",{attrs:{src:"https://gitee.com/Jioho/img/raw/master/knowledge/20200623115152.png",alt:""}})]),t._v(" "),e("h3",{attrs:{id:"mvvm"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mvvm"}},[t._v("#")]),t._v(" MVVM")]),t._v(" "),e("p",[t._v("特点：")]),t._v(" "),e("ul",[e("li",[t._v("各部分之间的通信，都是双向的；")]),t._v(" "),e("li",[t._v("采用双向绑定： View 的变动，自动反映在 ViewModel，反之亦然。")])]),t._v(" "),e("p",[e("img",{attrs:{src:"https://gitee.com/Jioho/img/raw/master/knowledge/20200623115207.png",alt:""}})]),t._v(" "),e("comment")],1)}),[],!1,null,null,null);v.default=a.exports}}]);